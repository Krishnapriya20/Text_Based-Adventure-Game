import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report
import joblib

# Load processed game data
game_data = pd.read_csv("../data/processed_game_data.csv")

# Features and labels
X = game_data['player_action']
y = game_data['ai_response']

# Convert text data to feature vectors
vectorizer = CountVectorizer()
X_vec = vectorizer.fit_transform(X)

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_vec, y, test_size=0.3, random_state=42)

# Train the model
model = MultinomialNB()
model.fit(X_train, y_train)

# Evaluate the model
y_pred = model.predict(X_test)
print(classification_report(y_test, y_pred))

# Save the model
joblib.dump(model, "../models/ai_adventure_game_model.pkl")
joblib.dump(vectorizer, "../models/vectorizer.pkl")

print("Model training completed and saved.")
